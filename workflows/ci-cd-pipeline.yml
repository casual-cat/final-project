name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to 'main'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run code checks
      - name: Run Code Checks
        run: |
          flake8 .  # Code linting using flake8
          echo "Code check passed!"

      # Step 5: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 6: Log in to Docker Hub (optional, if you use Docker Hub)
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Set in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Set in GitHub Secrets

      # Step 7: Build Docker Image and Tag Version
      - name: Build and Tag Docker Image
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')  # Generate a version tag
          docker build -t my-flask-app:${VERSION} .
          docker tag my-flask-app:${VERSION} my-flask-app:latest
          echo "Docker Image Built with Tag: ${VERSION}"

      # Step 8: Push Docker Image to Docker Hub (optional)
      - name: Push Docker Image
        run: |
          VERSION=$(date +'%Y%m%d%H%M%S')
          docker push my-flask-app:${VERSION}
          docker push my-flask-app:latest
