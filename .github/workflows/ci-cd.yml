name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

jobs:
  build-and-test:
  runs-on: ubuntu-latest

  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10  # Use a valid Python version

      # Step 3: Install dependencies and run tests
      - name: Install dependencies and test
        run: |
          pip install -r requirements.txt
          pytest

      # Step 4: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t gabidelcea/my-flask-app:${{ github.sha }} .
      
      # Step 5: Push Docker image to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag gabidelcea/my-flask-app:${{ github.sha }} gabidelcea/my-flask-app:latest
          docker push gabidelcea/my-flask-app:${{ github.sha }}
          docker push gabidelcea/my-flask-app:latest

  deploy-to-ec2:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Step 1: SSH into EC2 and pull the latest Docker image
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
            docker pull gabidelcea/my-flask-app:latest
            docker stop my-flask-app || true
            docker rm my-flask-app || true
            docker run -d --name my-flask-app -p 80:5000 -p 443:5000 gabidelcea/my-flask-app:latest
